{"version":3,"sources":["api/system.js","components/system/CpuGraph.js","components/system/MemoryGraph.js","components/Sidebar.js","components/SystemApp.js","components/processes/ProcessList.js","components/processes/ProcessDetail.js","components/processes/graph/memGraph.js","components/processes/graph/cpuGraph.js","components/ProcessApp.js","components/App.js","index.js"],"names":["axios","create","baseURL","CpuData","props","resetData","data","state","series","setState","slice","length","updateData","y","x","Math","floor","Date","getTime","push","ApexCharts","exec","options","chart","id","animations","enabled","easing","dynamicAnimation","speed","toolbar","show","zoom","dataLabels","stroke","curve","title","text","align","markers","size","xaxis","type","range","legend","name","this","updateInterval","setInterval","system","get","then","res","cpuData","cpu_usage","round","clearInterval","height","style","paddingLeft","className","onClick","Component","MemoryData","memData","free_memory","SideBarNav","backgroundColor","window","location","pathname","toLocaleUpperCase","split","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","React","Dashboard","useState","freeMem","setFreeMem","availMem","setAvailMem","cpuUsage","setCpuUsage","cpuCount","setCpuCount","sysUptime","setSysUptime","sysPlatform","setSysPlatform","useEffect","a","info","fluid","fontSize","padding","lg","md","sm","CpuGraph","MemoryGraph","ProcessList","getRowData","map","i","cpu","pmem","pid","onProcessSelect","err","console","log","overflowX","scope","ProcessDetail","processData","processDetails","setProcessDetails","fetchData","timeoutID","owner","ppid","path","threads","priority","cmdline","utime","fontWeight","ProcessMemGraph","toFixed","getProps","ProcessCpuGraph","ProcessApp","processInfo","childData","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e034513.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: 'http://localhost:4000',\n});","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport ApexCharts from 'apexcharts';\n\nimport system from '../../api/system';\n\nclass CpuData extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\toptions: {\n\t\t\t\tchart: {\n\t\t\t\t\tid: 'cpugraph',\n\t\t\t\t\tanimations: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\teasing: 'linear',\n\t\t\t\t\t\tdynamicAnimation: {\n\t\t\t\t\t\t\tspeed: 1000,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\ttoolbar: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\tzoom: {\n\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\tdataLabels: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tstroke: {\n\t\t\t\t\tcurve: 'smooth',\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Cpu Utilization [Total %]',\n\t\t\t\t\talign: 'left',\n\t\t\t\t},\n\t\t\t\tmarkers: {\n\t\t\t\t\tsize: 0,\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\ttype: 'datetime',\n\t\t\t\t\trange: 10,\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tshow: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tseries: [{ name: 'x', data: [] }],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateInterval = setInterval(\n\t\t\t() =>\n\t\t\t\tsystem.get('/system-metrics').then((res) => {\n\t\t\t\t\tconst cpuData = res.data.cpu_usage;\n\n\t\t\t\t\tthis.updateData(Math.round(cpuData * 100));\n\t\t\t\t}),\n\t\t\t1000\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.updateInterval);\n\t}\n\n\tresetData = () => {\n\t\tconst { data } = this.state.series[0];\n\n\t\tthis.setState({\n\t\t\tseries: [{ data: data.slice(data.length - 10, data.length) }],\n\t\t});\n\t};\n\n\tupdateData = (y) => {\n\t\tconst x = Math.floor(new Date().getTime() / 1000);\n\n\t\tlet { data } = this.state.series[0];\n\t\tdata.push({ x, y });\n\n\t\tthis.setState({ series: [{ data }] }, () => {\n\t\t\tApexCharts.exec('cpugraph', 'updateSeries', this.state.series);\n\t\t});\n\n\t\t// stop data array from leaking memory and growing too big\n\t\tif (data.length > 100) this.resetData();\n\t};\n\n\trender() {\n\t\tconst { options, series } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Chart\n\t\t\t\t\toptions={options}\n\t\t\t\t\tseries={series}\n\t\t\t\t\ttype=\"line\"\n\t\t\t\t\theight=\"350\"\n\t\t\t\t/>\n\t\t\t\t<div style={{ paddingLeft: '5px' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"mb-2 mr-1 btn btn-primary\"\n\t\t\t\t\t\tonClick={this.resetData}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CpuData;\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport ApexCharts from 'apexcharts';\n\nimport system from '../../api/system';\n\nclass MemoryData extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\toptions: {\n\t\t\t\tchart: {\n\t\t\t\t\tid: 'memgraph',\n\t\t\t\t\tanimations: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\teasing: 'linear',\n\t\t\t\t\t\tdynamicAnimation: {\n\t\t\t\t\t\t\tspeed: 1000,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\ttoolbar: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\tzoom: {\n\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\tdataLabels: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tstroke: {\n\t\t\t\t\tcurve: 'smooth',\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Free Memory [MiB] ',\n\t\t\t\t\talign: 'left',\n\t\t\t\t},\n\t\t\t\tmarkers: {\n\t\t\t\t\tsize: 0,\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\ttype: 'datetime',\n\t\t\t\t\trange: 10,\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tshow: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tseries: [{ name: 'freemem', data: [] }],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateInterval = setInterval(\n\t\t\t() =>\n\t\t\t\tsystem.get('/system-metrics').then((res) => {\n\t\t\t\t\tconst memData = res.data.free_memory;\n\n\t\t\t\t\tthis.updateData(Math.round(memData));\n\t\t\t\t}),\n\t\t\t1000\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.updateInterval);\n\t}\n\n\tresetData = () => {\n\t\tconst { data } = this.state.series[0];\n\n\t\tthis.setState({\n\t\t\tseries: [{ data: data.slice(data.length - 10, data.length) }],\n\t\t});\n\t};\n\n\tupdateData = (y) => {\n\t\tconst x = Math.floor(new Date().getTime() / 1000);\n\n\t\tlet { data } = this.state.series[0];\n\t\tdata.push({ x, y });\n\n\t\tthis.setState({ series: [{ data }] }, () => {\n\t\t\tApexCharts.exec('memgraph', 'updateSeries', this.state.series);\n\t\t});\n\n\t\t// stop data array from leaking memory and growing too big\n\t\tif (data.length > 100) this.resetData();\n\t};\n\n\trender() {\n\t\tconst { options, series } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"mixed-chart\">\n\t\t\t\t<Chart\n\t\t\t\t\toptions={options}\n\t\t\t\t\tseries={series}\n\t\t\t\t\ttype=\"line\"\n\t\t\t\t\theight=\"350\"\n\t\t\t\t/>\n\t\t\t\t<div style={{ paddingLeft: '5px' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"mb-2 mr-1 btn btn-primary\"\n\t\t\t\t\t\tonClick={this.resetData}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MemoryData;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass SideBarNav extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<nav\n\t\t\t\tclassName=\"navbar navbar-expand-lg navbar-light sticky-top\"\n\t\t\t\tstyle={{ backgroundColor: '#e3f2fd' }}\n\t\t\t>\n\t\t\t\t<a className=\"navbar-brand\">\n\t\t\t\t\t{window.location.pathname.toLocaleUpperCase().split('/')}\n\t\t\t\t</a>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"navbar-toggler\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\tdata-target=\"#navbarNav\"\n\t\t\t\t\taria-controls=\"navbarNav\"\n\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\taria-label=\"Toggle navigation\"\n\t\t\t\t>\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\n\t\t\t\t</button>\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n\t\t\t\t\t<ul className=\"navbar-nav\">\n\t\t\t\t\t\t<Link to=\"/system\">\n\t\t\t\t\t\t\t<li className=\"nav-item nav-link\">System</li>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to=\"/process\">\n\t\t\t\t\t\t\t<li className=\"nav-item nav-link\">Process</li>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default SideBarNav;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card } from 'shards-react';\n\nimport CpuGraph from './system/CpuGraph';\nimport MemoryGraph from './system/MemoryGraph';\nimport SideBar from './Sidebar';\nimport system from '../api/system';\n\nconst Dashboard = () => {\n\tconst [freeMem, setFreeMem] = useState('');\n\tconst [availMem, setAvailMem] = useState('');\n\tconst [cpuUsage, setCpuUsage] = useState('');\n\tconst [cpuCount, setCpuCount] = useState('');\n\tconst [sysUptime, setSysUptime] = useState('');\n\tconst [sysPlatform, setSysPlatform] = useState('');\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(\n\t\t\tasync () =>\n\t\t\t\tawait system.get('/system-metrics').then((res) => {\n\t\t\t\t\tconst info = res.data;\n\n\t\t\t\t\tsetFreeMem(Math.round(info['free_memory']) + 'MB');\n\t\t\t\t\tsetAvailMem(Math.round(info['total_memory']) + ' MB');\n\t\t\t\t\tsetCpuUsage(\n\t\t\t\t\t\tMath.round(info['cpu_usage'] * 1000) / 10 + '%'\n\t\t\t\t\t);\n\t\t\t\t\tsetSysPlatform(info['platform']);\n\t\t\t\t\tsetSysUptime(info['sys_uptime'] + ' secs');\n\t\t\t\t\tsetCpuCount(info['cpu_count']);\n\t\t\t\t}),\n\t\t\t1000\n\t\t);\n\t}, []);\n\n\treturn (\n\t\t<Container fluid className=\"main-content-container px-4\">\n\t\t\t<SideBar />\n\t\t\t<br />\n\t\t\t<Row>\n\t\t\t\t<Col className=\"col-lg mb-4\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{ backgroundColor: 'rgb(255,250,250)' }}\n\t\t\t\t\t\tclassName=\"jumbotron card jumbotron-fluid\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<h1 className=\"display-4\">\n\t\t\t\t\t\t\tSystem Performance Metrics\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\tPlatform :{' '}\n\t\t\t\t\t\t\t{sysPlatform ? (\n\t\t\t\t\t\t\t\tsysPlatform\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<span style={{ fontSize: '30px' }}>\n\t\t\t\t\t\t\t\t\t--unavailable--\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)}{' '}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t{sysPlatform ? (\n\t\t\t\t\t\t<div style={{ padding: '5px' }}>\n\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t<h4 className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\tAvailable Memory :{' '}\n\t\t\t\t\t\t\t\t\t\t{availMem ? (\n\t\t\t\t\t\t\t\t\t\t\tavailMem\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ fontSize: '20px' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t--unavailable--\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t<h4 className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\tFree Memory :{' '}\n\t\t\t\t\t\t\t\t\t\t{freeMem ? (\n\t\t\t\t\t\t\t\t\t\t\tfreeMem\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ fontSize: '20px' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t--unavailable--\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t<h4 className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\tCpu Usage :{' '}\n\t\t\t\t\t\t\t\t\t\t{cpuUsage ? (\n\t\t\t\t\t\t\t\t\t\t\tcpuUsage\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ fontSize: '20px' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t--unavailable--\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t<h4 className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\tCpu Count :{' '}\n\t\t\t\t\t\t\t\t\t\t{cpuCount ? (\n\t\t\t\t\t\t\t\t\t\t\tcpuCount\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ fontSize: '20px' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t--unavailable--\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t<h4 className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\tSystem Uptime :{' '}\n\t\t\t\t\t\t\t\t\t\t{sysUptime ? (\n\t\t\t\t\t\t\t\t\t\t\tsysUptime\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ fontSize: '20px' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t--unavailable--\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div style={{ padding: '5px' }}>\n\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t<h2 className=\"card-title\">Loading...</h2>\n\t\t\t\t\t\t\t\t\t<h4>Fetching data</h4>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\n\t\t\t{sysPlatform ? (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<div style={{ padding: '10px' }}>\n\t\t\t\t\t\t\t\t<CpuGraph />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<div style={{ padding: '10px' }}>\n\t\t\t\t\t\t\t\t<MemoryGraph />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t) : (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-4\">\n\t\t\t\t\t\t<div></div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport './processlist.css';\n\nimport system from '../../api/system';\n\nclass ProcessList extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tsetInterval(async () => {\n\t\t\tawait system.get('/process-list').then((res) => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.setState({ data: res.data });\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log('ProcessList.js', err);\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1000);\n\t}\n\n\tgetRowData = () => {\n\t\tconst x = this.state.data;\n\n\t\treturn x.map((i) => {\n\t\t\treturn (\n\t\t\t\t<tr key={i.pid}>\n\t\t\t\t\t<th className=\"col-3\">{i.name}</th>\n\t\t\t\t\t<td className=\"col-3\">{i.cpu}</td>\n\t\t\t\t\t<td className=\"col-3\">{i.pmem}</td>\n\t\t\t\t\t<td className=\"col-3\">\n\t\t\t\t\t\t{i.pid}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn table-button btn-dark btn-sm\"\n\t\t\t\t\t\t\tonClick={() => this.props.onProcessSelect(i)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tmore info\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t};\n\n\trender() {\n\t\tconst x = this.state.data;\n\n\t\tif (x.length !== 0) {\n\t\t\treturn (\n\t\t\t\t<div style={{ overflowX: 'auto' }}>\n\t\t\t\t\t<h4>Running Process List :</h4>\n\t\t\t\t\t<div className=\"table-responsive\">\n\t\t\t\t\t\t<table className=\"table table-fixed\">\n\t\t\t\t\t\t\t<thead className=\"thead-dark\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"col\" className=\"col-3\">\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th scope=\"col\" className=\"col-3\">\n\t\t\t\t\t\t\t\t\t\tcpu\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th scope=\"col\" className=\"col-3\">\n\t\t\t\t\t\t\t\t\t\tmemory\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th scope=\"col\" className=\"col-3\">\n\t\t\t\t\t\t\t\t\t\tpid\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>{this.getRowData()}</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (x.length === 0) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Loading...</h1>\n\t\t\t\t\t<h2>Please wait fetching data...</h2>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default ProcessList;\n","import React, { useEffect, useState } from 'react';\nimport system from '../../api/system';\n\nconst ProcessDetail = ({ processData }) => {\n\tconst [processDetails, setProcessDetails] = useState('');\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst { data } = await system.get(\n\t\t\t\t`/process-list/${processData.pid}`\n\t\t\t);\n\t\t\tsetProcessDetails(data[0]);\n\t\t};\n\t\tconst timeoutID = setInterval(() => {\n\t\t\tif (processData.length !== 0) {\n\t\t\t\tfetchData();\n\t\t\t}\n\t\t}, 1000);\n\n\t\treturn () => {\n\t\t\tclearInterval(timeoutID);\n\t\t};\n\t}, [processData]);\n\n\tif (processData.length === 0) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Process Details</h1>\n\t\t\t\t<h4>No process selected</h4>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h1>Process Details</h1>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<h4>Name: {processData.name} </h4>\n\t\t\t\t<p>\n\t\t\t\t\tOWNER: {processData.owner} <br />\n\t\t\t\t\tPID: {processData.pid} <br />\n\t\t\t\t\tPPID: {processData.ppid} <br />\n\t\t\t\t\tPATH: {processData.path} <br />\n\t\t\t\t\tTHREADS: {processData.threads} <br />\n\t\t\t\t\tPRIORITY: {processData.priority} <br />\n\t\t\t\t\tCMDLINE: {processData.cmdline} <br />\n\t\t\t\t\tUPTIME: {processData.utime} <br />\n\t\t\t\t\t<span style={{ fontWeight: 'bold' }}>\n\t\t\t\t\t\tMEMORY: {Math.round(processDetails.pmem / 1000)} kB{' '}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tCPU: {processDetails.cpu} % <br />\n\t\t\t\t\t</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ProcessDetail;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport ApexCharts from 'apexcharts';\n\nimport system from '../../../api/system';\n\nclass ProcessMemGraph extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tmemData: '',\n\t\t\toptions: {\n\t\t\t\tchart: {\n\t\t\t\t\tid: 'memgraph',\n\t\t\t\t\tanimations: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\teasing: 'linear',\n\t\t\t\t\t\tdynamicAnimation: {\n\t\t\t\t\t\t\tspeed: 1000,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\ttoolbar: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\tzoom: {\n\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\tdataLabels: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tstroke: {\n\t\t\t\t\tcurve: 'smooth',\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Free Memory [MiB] ',\n\t\t\t\t\talign: 'left',\n\t\t\t\t},\n\t\t\t\tmarkers: {\n\t\t\t\t\tsize: 0,\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\ttype: 'datetime',\n\t\t\t\t\trange: 10,\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tshow: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tseries: [{ name: 'freemem', data: [] }],\n\t\t};\n\t}\n\n\tgetProps() {\n\t\tconst { processData } = this.props;\n\t\tif (processData.length !== 0) {\n\t\t\t(async () => {\n\t\t\t\tconst { data } = await system.get(\n\t\t\t\t\t`/process-list/${processData.pid}`\n\t\t\t\t);\n\t\t\t\tconst x = Math.round(data[0].pmem / 1000).toFixed(2);\n\t\t\t\tthis.updateData(x);\n\t\t\t})();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateInterval = setInterval(() => this.getProps(), 1000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.updateInterval);\n\t}\n\n\tresetData = () => {\n\t\tconst { data } = this.state.series[0];\n\n\t\tthis.setState({\n\t\t\tseries: [{ data: data.slice(data.length - 10, data.length) }],\n\t\t});\n\t};\n\n\tupdateData = (y) => {\n\t\tconst x = Math.floor(new Date().getTime() / 1000);\n\n\t\tlet { data } = this.state.series[0];\n\t\tdata.push({ x, y });\n\n\t\tthis.setState({ series: [{ data }] }, () => {\n\t\t\tApexCharts.exec('memgraph', 'updateSeries', this.state.series);\n\t\t});\n\n\t\t// stop data array from leaking memory and growing too big\n\t\tif (data.length > 100) this.resetData();\n\t};\n\n\trender() {\n\t\tconst { options, series } = this.state;\n\t\tconst { processData } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"mixed-chart\">\n\t\t\t\t<h2>{processData.name}</h2>\n\t\t\t\t<Chart\n\t\t\t\t\toptions={options}\n\t\t\t\t\tseries={series}\n\t\t\t\t\ttype=\"line\"\n\t\t\t\t\theight=\"350\"\n\t\t\t\t/>\n\t\t\t\t<div style={{ paddingLeft: '5px' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"mb-2 mr-1 btn btn-primary\"\n\t\t\t\t\t\tonClick={this.resetData}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ProcessMemGraph;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport ApexCharts from 'apexcharts';\n\nimport system from '../../../api/system';\n\nclass ProcessCpuGraph extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tmemData: '',\n\t\t\toptions: {\n\t\t\t\tchart: {\n\t\t\t\t\tid: 'cpugraph',\n\t\t\t\t\tanimations: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\teasing: 'linear',\n\t\t\t\t\t\tdynamicAnimation: {\n\t\t\t\t\t\t\tspeed: 1000,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\ttoolbar: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\tzoom: {\n\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\n\t\t\t\tdataLabels: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tstroke: {\n\t\t\t\t\tcurve: 'smooth',\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Free CPU [%] ',\n\t\t\t\t\talign: 'left',\n\t\t\t\t},\n\t\t\t\tmarkers: {\n\t\t\t\t\tsize: 0,\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\ttype: 'datetime',\n\t\t\t\t\trange: 10,\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tshow: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tseries: [{ name: 'freemem', data: [] }],\n\t\t};\n\t}\n\n\tgetProps() {\n\t\tconst { processData } = this.props;\n\t\tif (processData.length !== 0) {\n\t\t\t(async () => {\n\t\t\t\tconst { data } = await system.get(\n\t\t\t\t\t`/process-list/${processData.pid}`\n\t\t\t\t);\n\t\t\t\tconst x = Math.round(data[0].cpu).toFixed(2);\n\t\t\t\tthis.updateData(x);\n\t\t\t})();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateInterval = setInterval(() => this.getProps(), 1000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.updateInterval);\n\t}\n\n\tresetData = () => {\n\t\tconst { data } = this.state.series[0];\n\n\t\tthis.setState({\n\t\t\tseries: [{ data: data.slice(data.length - 10, data.length) }],\n\t\t});\n\t};\n\n\tupdateData = (y) => {\n\t\tconst x = Math.floor(new Date().getTime() / 1000);\n\n\t\tlet { data } = this.state.series[0];\n\t\tdata.push({ x, y });\n\n\t\tthis.setState({ series: [{ data }] }, () => {\n\t\t\tApexCharts.exec('cpugraph', 'updateSeries', this.state.series);\n\t\t});\n\n\t\t// stop data array from leaking memory and growing too big\n\t\tif (data.length > 100) this.resetData();\n\t};\n\n\trender() {\n\t\tconst { options, series } = this.state;\n\t\tconst { processData } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"mixed-chart\">\n\t\t\t\t<h2>{processData.name}</h2>\n\t\t\t\t<Chart\n\t\t\t\t\toptions={options}\n\t\t\t\t\tseries={series}\n\t\t\t\t\ttype=\"line\"\n\t\t\t\t\theight=\"350\"\n\t\t\t\t/>\n\t\t\t\t<div style={{ paddingLeft: '5px' }}>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"mb-2 mr-1 btn btn-primary\"\n\t\t\t\t\t\tonClick={this.resetData}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ProcessCpuGraph;\n","import React from 'react';\nimport { Container, Row, Col, Card } from 'shards-react';\n\nimport SideBarNav from './Sidebar';\nimport ProcessList from './processes/ProcessList';\nimport ProcessDetail from './processes/ProcessDetail';\n\n// Graph Imports\nimport ProcessMemGraph from './processes/graph/memGraph';\nimport ProcessCpuGraph from './processes/graph/cpuGraph';\n\nclass ProcessApp extends React.Component {\n\tstate = { processInfo: [] };\n\n\tonProcessSelect = (childData) => {\n\t\tthis.setState({ processInfo: childData });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Container fluid className=\"main-content-container px-4\">\n\t\t\t\t<SideBarNav />\n\t\t\t\t<br />\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"col-lg mb-4\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'rgb(255,250,250)' }}\n\t\t\t\t\t\t\tclassName=\"jumbotron card jumbotron-fluid\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h1 className=\"display-4\">\n\t\t\t\t\t\t\t\tSystem Process Metrics\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"col-lg mb-6\">\n\t\t\t\t\t\t<div style={{ padding: '5px' }}>\n\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t<ProcessList\n\t\t\t\t\t\t\t\t\t\tonProcessSelect={this.onProcessSelect}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"col-lg-4 mb-2\">\n\t\t\t\t\t\t<div style={{ padding: '5px' }}>\n\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t<ProcessDetail\n\t\t\t\t\t\t\t\t\t\tprocessData={this.state.processInfo}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t{this.state.processInfo.length !== 0 ? (\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-4\">\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<div style={{ padding: '10px' }}>\n\t\t\t\t\t\t\t\t\t<ProcessMemGraph\n\t\t\t\t\t\t\t\t\t\tprocessData={this.state.processInfo}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-4\">\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<div style={{ padding: '10px' }}>\n\t\t\t\t\t\t\t\t\t<ProcessCpuGraph\n\t\t\t\t\t\t\t\t\t\tprocessData={this.state.processInfo}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t) : (\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-8\">\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<div style={{ padding: '10px' }}>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t\tPlease select a process to plot the\n\t\t\t\t\t\t\t\t\t\tgraph\n\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default ProcessApp;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nimport Dashboard from './SystemApp';\nimport ProcessApp from './ProcessApp';\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Redirect to=\"/system\" />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/system\" component={Dashboard} />\n\t\t\t\t\t<Route path=\"/process\" component={ProcessApp} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}